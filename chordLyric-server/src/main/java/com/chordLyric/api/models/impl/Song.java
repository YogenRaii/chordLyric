/**
 * 
 */
package com.chordLyric.api.models.impl;

import java.util.List;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.data.annotation.Id;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDocument;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTyped;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperFieldModel.DynamoDBAttributeType;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.chordLyric.api.models.types.ArtistType;
import com.chordLyric.api.models.types.MusicType;
import com.fasterxml.jackson.annotation.JsonIgnore;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

/**
 * @author Yogen
 *
 */
@Getter
@Setter
@ToString
@DynamoDBTable(tableName = "chordLyric_Song")
public class Song extends Article {
	
	@JsonIgnore
	@Id
	@DynamoDBHashKey (attributeName = "Id")
	@DynamoDBAutoGeneratedKey
	private String id;

	@NotNull
	@NotEmpty
	@DynamoDBAttribute(attributeName = "Lyrics")
	private String lyrics;
	
	@DynamoDBAttribute(attributeName = "LyricsWithChords")
	private String lyricsWithChords;

	@NotNull
	@DynamoDBTyped(DynamoDBAttributeType.S)
	@DynamoDBAttribute(attributeName = "Genre")
	private MusicType genre;
	
	@Valid
	@DynamoDBAttribute(attributeName = "Artists")
	private List<Artist> artists;
}
