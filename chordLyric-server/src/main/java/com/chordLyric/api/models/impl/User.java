package com.chordLyric.api.models.impl;

import java.util.Date;
import java.util.List;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.data.annotation.Id;
import org.springframework.data.elasticsearch.annotations.Document;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperFieldModel.DynamoDBAttributeType;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTyped;
import com.chordLyric.api.models.Model;
import com.chordLyric.api.models.types.RoleType;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Document(indexName = "song", type = "song", shards = 1, replicas = 0, refreshInterval = "-1")
@DynamoDBTable(tableName = "chordLyric_User")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
@ToString
public class User extends Model<String> {
	@JsonIgnore
	@Id
	@DynamoDBHashKey (attributeName = "Id")
	@DynamoDBAutoGeneratedKey
	private String id;
	
	@NotEmpty 
	@NotNull
	@DynamoDBAttribute(attributeName = "Username")
	private String username;
	
	@NotEmpty 
	@NotNull
	@DynamoDBAttribute(attributeName = "Email")
	private String email;
	
	@JsonIgnore
	@NotEmpty 
	@NotNull
	@DynamoDBAttribute(attributeName = "Password")
	private String password;
	
	@NotEmpty 
	@NotNull
	@DynamoDBAttribute(attributeName = "FirstName")
	private String firstName;
	
	@NotEmpty 
	@NotNull
	@DynamoDBAttribute(attributeName = "LastName")
	private String lastName;
	
	@DynamoDBAttribute(attributeName = "DateCreated")
	private Date dateCreated;
	
	@DynamoDBTyped(DynamoDBAttributeType.S)
	@DynamoDBAttribute(attributeName = "Role")
	private RoleType role;
	
	@DynamoDBAttribute(attributeName = "Token")
	private String token;
}
